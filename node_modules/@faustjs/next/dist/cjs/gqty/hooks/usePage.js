"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = void 0;
const client_1 = require("@faustjs/core/client");
const router_1 = require("next/router");
const defaults_1 = __importDefault(require("lodash/defaults"));
const isString_1 = __importDefault(require("lodash/isString"));
const utils_1 = require("../../utils");
function create(useQuery) {
    return (args) => {
        const { query } = (0, router_1.useRouter)();
        const { page } = useQuery();
        let params = (0, defaults_1.default)({}, args);
        if ((0, utils_1.hasPageId)(query)) {
            params = {
                id: query.pageId,
                idType: client_1.PageIdType.ID,
                ...params,
            };
        }
        if ((0, utils_1.hasPageUri)(query)) {
            params = {
                id: query.pageUri.join('/'),
                idType: client_1.PageIdType.URI,
                ...params,
            };
        }
        if (!(0, isString_1.default)(params.id)) {
            throw new Error('Invalid parameters for usePage, you must send in an id or specify known URL params in your config');
        }
        return page(params);
    };
}
exports.create = create;
