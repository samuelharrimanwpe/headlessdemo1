"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.apiRouter = void 0;
const lodash_1 = require("lodash");
const middleware_1 = require("../auth/middleware");
const utils_1 = require("../../utils");
const config_1 = require("../../config");
/**
 * A node handler for processing all incoming Faust.js API requests.
 *
 * @example ```ts
 * // filename: pages/api/faust/[[...route]].ts
 * import 'faust.config';
 * import { apiRouter } from '@faustjs/core/api';
 *
 * export default apiRouter;
 * ```
 *
 * @param {IncomingMessage} req
 * @param {ServerResponse} res
 */
async function apiRouter(req, res) {
    const { apiBasePath } = (0, config_1.config)();
    if ((0, lodash_1.isUndefined)(apiBasePath)) {
        throw new Error(`You must provide an apiBasePath value in your config in order to use the API router`);
    }
    const parsedUrl = (0, utils_1.parseUrl)(req.url);
    const pathname = parsedUrl === null || parsedUrl === void 0 ? void 0 : parsedUrl.pathname;
    switch (pathname) {
        case `${apiBasePath}/${config_1.TOKEN_ENDPOINT_PARTIAL_PATH}`:
            return (0, middleware_1.authorizeHandler)(req, res);
        case `${apiBasePath}/${config_1.LOGOUT_ENDPOINT_PARTIAL_PATH}`:
            return (0, middleware_1.logoutHandler)(req, res);
        default:
            res.statusCode = 404;
            res.end();
    }
}
exports.apiRouter = apiRouter;
